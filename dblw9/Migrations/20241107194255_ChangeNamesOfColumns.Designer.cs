// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dblw9;

#nullable disable

namespace dblw9.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241107194255_ChangeNamesOfColumns")]
    partial class ChangeNamesOfColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("float")
                        .HasColumnName("cost");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("unspecified")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("id_supplier");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("unit");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 109999.0,
                            Name = "Apple iPhone 15 Pro 128GB Dual Sim Blue Titanium",
                            SupplierId = 1,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 59999.0,
                            Name = "Apple iPhone 13 128GB nanoSim/eSim Midnight",
                            SupplierId = 1,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 14999.0,
                            Name = "Samsung Galaxy A15 LTE 4/128GB Dark Blue",
                            SupplierId = 2,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 4,
                            Cost = 27999.0,
                            Name = "HUAWEI nova 12s 8/256GB Black",
                            SupplierId = 3,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 5,
                            Cost = 20999.0,
                            Name = "Xiaomi Redmi Note 13 8/256GB Midnight Black",
                            SupplierId = 4,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 6,
                            Cost = 12999.0,
                            Name = "Xiaomi Redmi 12 8/256GB Midnight Black",
                            SupplierId = 4,
                            Unit = "шт"
                        });
                });

            modelBuilder.Entity("ItemsInStorage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrialDate")
                        .HasColumnType("datetime")
                        .HasColumnName("arrial_date");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("id_item");

                    b.Property<int>("StorageId")
                        .HasColumnType("int")
                        .HasColumnName("id_storage");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("StorageId");

                    b.ToTable("ItemsInStorages");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            ArrialDate = new DateTime(2024, 11, 7, 22, 42, 55, 18, DateTimeKind.Local).AddTicks(9349),
                            ItemId = 1,
                            StorageId = 1
                        },
                        new
                        {
                            Id = 1,
                            ArrialDate = new DateTime(2024, 11, 7, 22, 42, 55, 18, DateTimeKind.Local).AddTicks(9365),
                            ItemId = 2,
                            StorageId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArrialDate = new DateTime(2024, 11, 7, 22, 42, 55, 18, DateTimeKind.Local).AddTicks(9367),
                            ItemId = 3,
                            StorageId = 2
                        },
                        new
                        {
                            Id = 3,
                            ArrialDate = new DateTime(2024, 11, 7, 22, 42, 55, 18, DateTimeKind.Local).AddTicks(9368),
                            ItemId = 4,
                            StorageId = 2
                        },
                        new
                        {
                            Id = 4,
                            ArrialDate = new DateTime(2024, 11, 7, 22, 42, 55, 18, DateTimeKind.Local).AddTicks(9369),
                            ItemId = 5,
                            StorageId = 3
                        },
                        new
                        {
                            Id = 5,
                            ArrialDate = new DateTime(2024, 11, 7, 22, 42, 55, 18, DateTimeKind.Local).AddTicks(9370),
                            ItemId = 6,
                            StorageId = 3
                        });
                });

            modelBuilder.Entity("Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adress");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.ToTable("Storages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Moscow",
                            Name = "ST1",
                            PhoneNumber = "123132131"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Vladimir",
                            Name = "ST2",
                            PhoneNumber = "132313412"
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Zelenograd",
                            Name = "ST3",
                            PhoneNumber = "12441212"
                        });
                });

            modelBuilder.Entity("Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adress");

                    b.Property<string>("ContactPerson")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_person")
                        .HasComputedColumnSql("[ContactPersonFirstName] + ' ' + [ContactPersonLastName]");

                    b.Property<string>("ContactPersonFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_person_first_name");

                    b.Property<string>("ContactPersonLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_person_last_name");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "New York City",
                            ContactPersonFirstName = "Name1",
                            ContactPersonLastName = "Lastname1",
                            Name = "Apple",
                            PhoneNumber = "123123123"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Tokyo",
                            ContactPersonFirstName = "Ryo",
                            ContactPersonLastName = "Kudo",
                            Name = "Samsung",
                            PhoneNumber = "3213321321"
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Huyung",
                            ContactPersonFirstName = "Ching",
                            ContactPersonLastName = "Chong",
                            Name = "Huawei",
                            PhoneNumber = "31312312"
                        },
                        new
                        {
                            Id = 4,
                            Adress = "GungHuyung",
                            ContactPersonFirstName = "Chong",
                            ContactPersonLastName = "Chang",
                            Name = "Xiaomi",
                            PhoneNumber = "12341512"
                        });
                });

            modelBuilder.Entity("Item", b =>
                {
                    b.HasOne("Supplier", "Supplier")
                        .WithMany("Items")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ItemsInStorage", b =>
                {
                    b.HasOne("Item", "Item")
                        .WithMany("ItemsInStorages")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Storage", "Storage")
                        .WithMany("ItemsInStorages")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("Item", b =>
                {
                    b.Navigation("ItemsInStorages");
                });

            modelBuilder.Entity("Storage", b =>
                {
                    b.Navigation("ItemsInStorages");
                });

            modelBuilder.Entity("Supplier", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
